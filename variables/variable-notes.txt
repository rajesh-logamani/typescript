/**
 * RECAP:
 * - `number`: e.g., `let x: number = 5;`
 * - `string`: e.g., `let y: string = "Hello";`
 * - `any`: e.g., `let anyVar: any = "I can be anything";`
 * - `boolean`: e.g., `let z: boolean = true;`
 * - `object`: e.g., `let obj: { name: string; age: number } = { name: "John", age: 30 };`
 * - `arrays`: e.g., `let arr: number[] = [1, 2, 3, 4, 5];`
 * - `mixed arrays`: e.g., `let mixedArr: (number | string | { name: string; age: number })[] = [{ name: "John", age: 30 }, 1, "two"];`
 * - `tuple`: e.g., `let tuple: [number, string] = [1, "one"];`
 * - `multiple tuple`: e.g., `let tuples: [number, string][] = [[1, "one"], [2, "two"]];`
 * - `unknown`: e.g., `let u: unknown = 5;`
 * - `null`: e.g., `let nullVar: null = null;`
 * - `undefined`: e.g., `let undefinedVar: undefined = undefined;`
 * - `Symbol`: e.g., `let symbolVar: symbol = Symbol("unique");`
 * - `bigint`: e.g., `let bigintVar: bigint = 12345678901234567890n;`
 * - `enum`: e.g., `enum Color { Red = "RED", Green = "GREEN", Blue = "BLUE" };`
 */